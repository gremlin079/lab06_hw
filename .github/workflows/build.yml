name: Build and Package

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  linux-build:
    runs-on: ubuntu-24.04
    steps:
    - uses: actions/checkout@v4
    
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y cmake g++ libgtest-dev rpm dpkg-dev
        
    - name: Build GTest
      run: |
        cd /usr/src/googletest/googletest || cd /usr/src/gtest
        sudo cmake CMakeLists.txt
        sudo make
        sudo cp lib/*.a /usr/lib/
        
    - name: Configure CMake
      run: cmake -S . -B build -DCMAKE_BUILD_TYPE=Release
      
    - name: Build
      run: cmake --build build --config Release --parallel 2
      
    - name: Create packages
      working-directory: ${{github.workspace}}/build
      run: cpack -G DEB -G RPM
      
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: linux-packages
        path: build/*.deb build/*.rpm

  windows-build:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Install MSVC
      uses: ilammy/msvc-dev-cmd@v1
      
    - name: Install dependencies
      run: choco install cmake nsis -y
    
    - name: Configure CMake
      run: cmake -S . -B build -DCMAKE_BUILD_TYPE=Release
      
    - name: Build
      run: cmake --build build --config Release --parallel 2
      
    - name: Create package
      working-directory: ${{github.workspace}}/build
      run: cpack -G NSIS
      
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: windows-package
        path: build/*.exe

  macos-build:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v4
  
    - name: Check required files
      run: |
        if [ ! -f "Info.plist" ]; then
        echo "<?xml version='1.0' encoding='UTF-8'?><!DOCTYPE plist PUBLIC '-//Apple//DTD PLIST 1.0//EN' 'http://www.apple.com/DTDs/PropertyList-1.0.dtd'><plist version='1.0'><dict><key>CFBundleExecutable</key><string>solver_app</string><key>CFBundleIdentifier</key><string>com.yourcompany.solver</string><key>CFBundleName</key><string>Solver</string><key>CFBundleVersion</key><string>1.0.0</string></dict></plist>" > Info.plist
        fi
  
    - name: Install dependencies
      run: brew install cmake googletest
  
    - name: Configure CMake
      run: cmake -S . -B build -DCMAKE_BUILD_TYPE=Release
  
    - name: Build
      run: cmake --build build --config Release
  
    - name: Create package
      working-directory: ${{github.workspace}}/build
      run: cpack -G Bundle
  
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: macos-package
        path: build/*.dmg

  create-release:
    needs: [linux-build, windows-build, macos-build]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/download-artifact@v4
      with:
        name: linux-packages
        path: artifacts/linux
    - uses: actions/download-artifact@v4
      with:
        name: windows-package
        path: artifacts/windows
    - uses: actions/download-artifact@v4
      with:
        name: macos-package
        path: artifacts/macos
    
    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: v${{ github.run_number }}
        name: Release v${{ github.run_number }}
        files: |
          artifacts/linux/*.deb
          artifacts/linux/*.rpm
          artifacts/windows/*.exe
          artifacts/macos/*.dmg
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
